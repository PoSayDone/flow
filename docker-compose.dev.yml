services:
    nginx:
        build:
            context: ./nginx
        ports:
            - 80:80
        depends_on:
            - frontend
            - backend
        volumes:
            - ./static/images/:/var/www/images

    backend:
        build:
            context: ./backend
        volumes:
            - ./backend:/usr/src/app
            - ./static/images/:/usr/src/app/images
        command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
        depends_on:
            - db
        restart: on-failure
        env_file:
          - .env

    frontend:
        build:
            context: ./frontend/
            dockerfile: dev.Dockerfile
        volumes:
            - ./frontend/:/app
            - /app/node_modules
        command: yarn dev --host 0.0.0.0 --port 3000
        restart: on-failure
        ports:
            - 3001:3001
        depends_on:
            - backend
        environment:
          - NODE_ENV=development
          - BODY_SIZE_LIMIT=Infinity
          - VITE_API_URL=${VITE_API_URL_DEV}
          - VITE_IMAGES_URL=${VITE_IMAGES_URL_DEV}

    db:
        image: postgres:15-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - 5432:5432
        environment:
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          - POSTGRES_DB=${POSTGRES_DB}

volumes:
    postgres_data:
